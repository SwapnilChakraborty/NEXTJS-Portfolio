{"version":3,"file":"index.js","sources":["../../../src/client/index.ts"],"sourcesContent":["import { applySdkMetadata, hasTracingEnabled } from '@sentry/core';\nimport type { BrowserOptions } from '@sentry/react';\nimport {\n  Integrations as OriginalIntegrations,\n  getCurrentScope,\n  getDefaultIntegrations as getReactDefaultIntegrations,\n  init as reactInit,\n} from '@sentry/react';\nimport type { EventProcessor, Integration } from '@sentry/types';\n\nimport { devErrorSymbolicationEventProcessor } from '../common/devErrorSymbolicationEventProcessor';\nimport { getVercelEnv } from '../common/getVercelEnv';\nimport { browserTracingIntegration } from './browserTracingIntegration';\nimport { BrowserTracing } from './browserTracingIntegration';\nimport { rewriteFramesIntegration } from './rewriteFramesIntegration';\nimport { applyTunnelRouteOption } from './tunnelRoute';\n\nexport * from '@sentry/react';\n// eslint-disable-next-line deprecation/deprecation\nexport { nextRouterInstrumentation } from './routing/nextRoutingInstrumentation';\nexport { captureUnderscoreErrorException } from '../common/_error';\n\n/** @deprecated Import the integration function directly, e.g. `inboundFiltersIntegration()` instead of `new Integrations.InboundFilter(). */\nexport const Integrations = {\n  // eslint-disable-next-line deprecation/deprecation\n  ...OriginalIntegrations,\n  BrowserTracing,\n};\n\n// Previously we expected users to import `BrowserTracing` like this:\n//\n// import { Integrations } from '@sentry/nextjs';\n// const instance = new Integrations.BrowserTracing();\n//\n// This makes the integrations unable to be treeshaken though. To address this, we now have\n// this individual export. We now expect users to consume BrowserTracing like so:\n//\n// import { BrowserTracing } from '@sentry/nextjs';\n// const instance = new BrowserTracing();\n// eslint-disable-next-line deprecation/deprecation\nexport { BrowserTracing, rewriteFramesIntegration };\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean;\n\n/** Inits the Sentry NextJS SDK on the browser with the React SDK. */\nexport function init(options: BrowserOptions): void {\n  const opts = {\n    environment: getVercelEnv(true) || process.env.NODE_ENV,\n    defaultIntegrations: getDefaultIntegrations(options),\n    ...options,\n  };\n\n  fixBrowserTracingIntegration(opts);\n\n  applyTunnelRouteOption(opts);\n  applySdkMetadata(opts, 'nextjs', ['nextjs', 'react']);\n\n  reactInit(opts);\n\n  const scope = getCurrentScope();\n  scope.setTag('runtime', 'browser');\n  const filterTransactions: EventProcessor = event =>\n    event.type === 'transaction' && event.transaction === '/404' ? null : event;\n  filterTransactions.id = 'NextClient404Filter';\n  scope.addEventProcessor(filterTransactions);\n\n  if (process.env.NODE_ENV === 'development') {\n    scope.addEventProcessor(devErrorSymbolicationEventProcessor);\n  }\n}\n\n// TODO v8: Remove this again\n// We need to handle BrowserTracing passed to `integrations` that comes from `@sentry/tracing`, not `@sentry/nextjs` :(\nfunction fixBrowserTracingIntegration(options: BrowserOptions): void {\n  const { integrations } = options;\n  if (!integrations) {\n    return;\n  }\n\n  if (Array.isArray(integrations)) {\n    options.integrations = maybeUpdateBrowserTracingIntegration(integrations);\n  } else {\n    options.integrations = defaultIntegrations => {\n      const userFinalIntegrations = integrations(defaultIntegrations);\n\n      return maybeUpdateBrowserTracingIntegration(userFinalIntegrations);\n    };\n  }\n}\n\nfunction isNewBrowserTracingIntegration(\n  integration: Integration,\n): integration is Integration & { options?: Parameters<typeof browserTracingIntegration>[0] } {\n  // eslint-disable-next-line deprecation/deprecation\n  return !!integration.afterAllSetup && !!(integration as BrowserTracing).options;\n}\n\nfunction maybeUpdateBrowserTracingIntegration(integrations: Integration[]): Integration[] {\n  const browserTracing = integrations.find(integration => integration.name === 'BrowserTracing');\n\n  if (!browserTracing) {\n    return integrations;\n  }\n\n  // If `browserTracingIntegration()` was added, we need to force-convert it to our custom one\n  if (isNewBrowserTracingIntegration(browserTracing)) {\n    const { options } = browserTracing;\n    // eslint-disable-next-line deprecation/deprecation\n    integrations[integrations.indexOf(browserTracing)] = new BrowserTracing(options);\n  }\n\n  // If BrowserTracing was added, but it is not our forked version,\n  // replace it with our forked version with the same options\n  // eslint-disable-next-line deprecation/deprecation\n  if (!(browserTracing instanceof BrowserTracing)) {\n    // eslint-disable-next-line deprecation/deprecation\n    const options: ConstructorParameters<typeof BrowserTracing>[0] = (browserTracing as BrowserTracing).options;\n    // This option is overwritten by the custom integration\n    delete options.routingInstrumentation;\n    // eslint-disable-next-line deprecation/deprecation\n    delete options.tracingOrigins;\n    // eslint-disable-next-line deprecation/deprecation\n    integrations[integrations.indexOf(browserTracing)] = new BrowserTracing(options);\n  }\n\n  return integrations;\n}\n\nfunction getDefaultIntegrations(options: BrowserOptions): Integration[] {\n  const customDefaultIntegrations = [...getReactDefaultIntegrations(options), rewriteFramesIntegration()];\n\n  // This evaluates to true unless __SENTRY_TRACING__ is text-replaced with \"false\", in which case everything inside\n  // will get treeshaken away\n  if (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n    if (hasTracingEnabled(options)) {\n      customDefaultIntegrations.push(browserTracingIntegration());\n    }\n  }\n\n  return customDefaultIntegrations;\n}\n\n/**\n * Just a passthrough in case this is imported from the client.\n */\nexport function withSentryConfig<T>(exportedUserNextConfig: T): T {\n  return exportedUserNextConfig;\n}\n\nexport { browserTracingIntegration } from './browserTracingIntegration';\n\nexport * from '../common';\n"],"names":["OriginalIntegrations","BrowserTracing","getVercelEnv","applyTunnelRouteOption","applySdkMetadata","reactInit","getCurrentScope","devErrorSymbolicationEventProcessor","getReactDefaultIntegrations","rewriteFramesIntegration","hasTracingEnabled","browserTracingIntegration"],"mappings":"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"}