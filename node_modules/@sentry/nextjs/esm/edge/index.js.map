{"version":3,"file":"index.js","sources":["../../../src/edge/index.ts"],"sourcesContent":["import { addTracingExtensions, applySdkMetadata } from '@sentry/core';\nimport type { VercelEdgeOptions } from '@sentry/vercel-edge';\nimport { getDefaultIntegrations, init as vercelEdgeInit } from '@sentry/vercel-edge';\n\nimport { isBuild } from '../common/utils/isBuild';\nimport { rewriteFramesIntegration } from './rewriteFramesIntegration';\n\nexport type EdgeOptions = VercelEdgeOptions;\n\nexport { rewriteFramesIntegration };\n\n/** Inits the Sentry NextJS SDK on the Edge Runtime. */\nexport function init(options: VercelEdgeOptions = {}): void {\n  addTracingExtensions();\n\n  if (isBuild()) {\n    return;\n  }\n\n  const customDefaultIntegrations = [...getDefaultIntegrations(options), rewriteFramesIntegration()];\n\n  const opts = {\n    defaultIntegrations: customDefaultIntegrations,\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'nextjs');\n\n  vercelEdgeInit(opts);\n}\n\n/**\n * Just a passthrough in case this is imported from the client.\n */\nexport function withSentryConfig<T>(exportedUserNextConfig: T): T {\n  return exportedUserNextConfig;\n}\n\nexport * from '@sentry/vercel-edge';\nexport { Span, Transaction } from '@sentry/core';\n\nexport * from '../common';\n\nexport {\n  // eslint-disable-next-line deprecation/deprecation\n  withSentryAPI,\n  wrapApiHandlerWithSentry,\n} from './wrapApiHandlerWithSentry';\n"],"names":["vercelEdgeInit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAWA;AACO,SAAS,IAAI,CAAC,OAAO,GAAsB,EAAE,EAAQ;AAC5D,EAAE,oBAAoB,EAAE,CAAA;AACxB;AACA,EAAE,IAAI,OAAO,EAAE,EAAE;AACjB,IAAI,OAAM;AACV,GAAE;AACF;AACA,EAAE,MAAM,yBAAA,GAA4B,CAAC,GAAG,sBAAsB,CAAC,OAAO,CAAC,EAAE,wBAAwB,EAAE,CAAC,CAAA;AACpG;AACA,EAAE,MAAM,OAAO;AACf,IAAI,mBAAmB,EAAE,yBAAyB;AAClD,IAAI,GAAG,OAAO;AACd,GAAG,CAAA;AACH;AACA,EAAE,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;AAClC;AACA,EAAEA,MAAc,CAAC,IAAI,CAAC,CAAA;AACtB,CAAA;AACA;AACA;AACA;AACA;AACO,SAAS,gBAAgB,CAAI,sBAAsB,EAAQ;AAClE,EAAE,OAAO,sBAAsB,CAAA;AAC/B;;;;"}